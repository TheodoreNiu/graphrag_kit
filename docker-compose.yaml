version: "3.8"

services:
  manage:
    build:
      context: .
      dockerfile: Dockerfile.manage
    working_dir: /app
    environment:
      TZ: "Asia/Shanghai"
      DEBUG_MODE: "true"
    command: >
      streamlit run app_manage.py --server.port 9000 --server.address 0.0.0.0 --server.runOnSave true --server.fileWatcherType poll --browser.gatherUsageStats false
    volumes:
      - ./:/app
    ports:
      - "9000:9000"
    networks:
      - app-network
    restart: on-failure
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000" ]
      interval: 30s
      timeout: 10s
      retries: 2
      start_period: 5s

  test:
    build:
      context: .
      dockerfile: Dockerfile.test
    working_dir: /app
    environment:
      TZ: "Asia/Shanghai"
      DEBUG_MODE: "true"
    command: >
      streamlit run app_test.py --server.port 9001 --server.address 0.0.0.0 --server.runOnSave true --server.fileWatcherType poll --browser.gatherUsageStats false
    volumes:
      - ./:/app
    ports:
      - "9001:9001"
    networks:
      - app-network
    restart: on-failure
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9001" ]
      interval: 30s
      timeout: 10s
      retries: 2
      start_period: 5s

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    command: fastapi dev app_api.py --host 0.0.0.0 --port 9002
    volumes:
      - ./:/app
    working_dir: /app
    ports:
      - "9002:9002"
    networks:
      - app-network
    restart: on-failure
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9002" ]
      interval: 30s
      timeout: 10s
      retries: 2
      start_period: 5s

networks:
  app-network:
    driver: bridge
